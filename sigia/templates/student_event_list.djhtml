{% extends 'ajax-content.djhtml' %}

{% load sigia_auth_filters %}

{% block content %}
<div id="custom-toolbar">
	{% if user|has_group:"secretary" %}
	    <div class="btn-group" role="group">
	        <button class="btn btn-default" onclick="LoadAjaxContent('/student_event/new/');" title="Registrar Evento de Estudiante">
				<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Nuevo
	    	</button>
	        <button class="btn btn-default" id="tbb_edit" title="Editar Datos Evento de Estudiante">
				<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Editar
	    	</button>
	        <button class="btn btn-default" id="tbb_delete" title="Eliminar Evento de Estudiante">
				<span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Eliminar
	    	</button>
	    </div>
	    
	    <div class="btn-group" role="group">
	    	<button class="btn btn-default success-text" id="tbb_event_done" title="Dar Evento de Estudiante por Cumplido">
				<span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Cumplido
	    	</button>   
	    	<button class="btn btn-default danger-text" id="tbb_event_abort" title="Abortar Evento de Estudiante">
				<span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Abortar
	    	</button>
	    </div>
    {% endif %}
</div>

<h1 class="page-header">{{ title }}</h1>
<div class="box">
	<div class="box-content" style="display: block;">
		<table id="table-pagination"></table>
	</div>
</div>

<div id="option-content"></div>

<form id="du_form">{% csrf_token %}
	<input type="hidden" id="du_ids" name="ids" />
	<input type="hidden" id="du_end_obs" name="end_obs" />
</form>
{% endblock %}

{% block body_scripts %}

<script>
	function stateFormatter(value, row) {
		if (value == 'CON') return 'Concluida';
		if (value == 'ABO') return 'Abortada';
		if (value == 'ESP') return 'En Espera';
		if (value == 'ENC') return 'En Curso';
		return value;
    }

	function studentEventListRowStyle(row, index) {
        var classes = ['active-text', 'success-text', 'info-text', 'warning-text', 'danger-text'];

        if (row.event_state == "CON" ) return {classes: 'success-text'}
        else if (row.event_state == "ABO" ) return {classes: 'danger-text'}
        else if (row.event_state == "ESP" ) return {classes: 'warning-text'}
        return {classes: 'info-text'};
    };

    $(document).ready(function() {
    	$('#table-pagination').mutate('height width', function(el, info) {
	        $('#table-pagination').bootstrapTable('resetView');
	    });
    	
    	$('#table-pagination').bootstrapTable({
            method: 'get',
            url: '/student_event/api/list/',
            cache: false,
            height: 600,
            pageSize: 50,
            pageList: [50, 100, 200, 500, 1000],
            striped: true,
            pagination: true,
            search: false,
            filterControl: true,
            filterShowClear: true,
            showColumns: true,
            showRefresh: true,
            minimumCountColumns: 2,
            rowStyle: studentEventListRowStyle,
            searchTimeOut: 1500,
            trimOnSearch: false,
            maintainSelected: true,
            clickToSelect: true,
            showExport: true,
            exportDataType: 'all',
            exportTypes: ['txt', 'csv', 'excel'],
            toolbar: '#custom-toolbar',
            columns: [{
                field: 'state',
                checkbox: true
            }, {
                field: 'id',
                title: 'ID',
                sortable: true,
                filterControl: 'input'
            }, {
                field: 'event_type',
                title: 'Tipo de Evento',
                sortable: true,
                filterControl: 'input'
            }, {
                field: 'name',
                title: 'Estudiante',
                sortable: true,
                filterControl: 'input'
            }, {
                field: 'student_type',
                title: 'Tipo Est.',
                sortable: true,
                formatter: studentTypeFormatter,
                filterControl: 'select',
                filterData: "var:STUDENT_TYPE_CHOICES"
            },{
                field: 'start_date',
                title: 'Fecha de Inicio',
                sortable: true,
                filterControl: 'input',
            }, {
                field: 'end_date',
                title: 'Fecha de Finalización',
                sortable: true,
                filterControl: 'input'
            }, {
                field: 'tutor',
                title: 'Tutor/Supervisor',
                sortable: true,
                filterControl: 'input'
            }, {
                field: 'event_state',
                title: 'Estado',
                sortable: true,
                formatter: stateFormatter,
                filterControl: 'select',
                filterData: "var:EVENT_STATE_CHOICES"
            }, {
                field: 'manager',
                title: 'Administrativo',
                sortable: true,
                filterControl: 'input'
            }, {
                field: 'ini_obs',
                title: 'Observaciones Iniciales',
                sortable: true,
                visible: true,
                filterControl: 'input'
            }, {
                field: 'end_obs',
                title: 'Observaciones Finales',
                sortable: true,
                visible: false,
                filterControl: 'input'
            }, {
                field: 'created',
                title: 'Creado',
                sortable: true,
                visible: false,
                filterControl: 'input'
            }, {
                field: 'created_by',
                title: 'Creado por',
                sortable: true,
                visible: false,
                filterControl: 'input'
            }, {
                field: 'modified',
                title: 'Modificado',
                sortable: true,
                visible: false,
                filterControl: 'input'
            }, {
                field: 'modified_by',
                title: 'Modificado por',
                sortable: true,
                visible: false,
                filterControl: 'input'
            }]
        });
            
	    $('#tbb_edit').click(function(){
			var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			if (student_event.length == 0){
				bootbox.alert('Debe seleccionar un evento de estudiante primero.');
			} else if (student_event.length == 1) {
				student_event = student_event[0];
				{% if not user|has_group:"general_secretary" %}
					if (student_event.event_state == 'Concluida' || student_event.event_state == 'Abortada'){
						bootbox.alert('No se puede editar los eventos de estudiante que estén concluidos o abortados.');
						return;
					}
				{% endif %}
				LoadAjaxContent("/student_event/" + student_event.id + "/upgrade/");
			} else {
				bootbox.alert('No se pueden editar eventos de estudiante simultáneamente.');
			}
		});
		
		$('#tbb_export').click(function(){
			window.open("http://{{ REPORT_SERVER }}/pentaho/api/repos/%3Aaitec%3Astudent_event_excel.prpt/viewer", '_blank');
		});
		
		$('#tbb_print').click(function(){
		var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			if (student_event == null){
				bootbox.alert('Debe seleccionar un evento de estudiante primero.');
			} else {
				$.jsPanel({
				  title: 'Datos del evento de estudiante: ',
				  bootstrap: true,
				  position: "center",
				  size:     { width:  800, height: 600 },
				  content: '<embed src="http://{{ REPORT_SERVER }}/pentaho/api/repos/%3Aaitec%3Astudent_event.prpt/generatedContent?userid=admin&password=password&output-type=pageable/pdf&student_event_id=' + student_event.id + '" width="100%" height="100%">'
				});
			}
		});
		
		$('#tbb_event_done').click(function(){
			var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			if (student_event.length == 0){
				bootbox.alert('Debe seleccionar un evento de estudiante primero.');
			} else {
				for (var i = 0; i < student_event.length; i++){
					if (student_event[0].event_state == "ABO") { 
						bootbox.alert('No se puede dar por concluida una tarea que fue previamente abortada.');						
						return;
					} else if (student_event[0].event_state == "ESP") { 
						bootbox.alert('No se puede dar por concluida una tarea incompleta.');
						return;
					} else if (student_event[0].event_state == "CON") { 
						bootbox.alert('La tarea ya está concluida.');
						return;
					}
				}
			
				var toolbar_footer = [{
			        item: '<button type="button"><span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span></button>',
			        event: 'click',
			        btnclass: 'btn btn-default',
			        btntext: ' Enviar',
			        callback: function( event ){
			        	var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			        	var str_ids = "";
		        		for (var x = 0; x < student_event.length; x++){ 
	        				str_ids  += student_event[x].id + ",";		        			
		        		}
		        		$('#du_ids').val(str_ids.substring(0, str_ids.length - 1));
		        		$("#du_end_obs").val($("#id_end_obs").val());
			        	$('#du_form')[0].action="/student_event/change_state/CON/";
						PostAndLoadAjaxContent($('#du_form'));
						event.data.close();
			        }
			    }];
			
				$.jsPanel({
				  id:       "obs_dialog",
				  selector: "#e-jspanelclosed",
				  title: 'Cumplido: Observaciones Finales: ',
				  bootstrap: true,
				  position: "center",
				  resizable: "disabled",
				  controls: {
				    maximize:     'disable',
				    minimize:     'disable',
				    normalize:    'disable',
				    smallify:     'disable',
				    maxtoScreen:  'disable'
				  },
				  toolbarFooter: toolbar_footer,
				  size:     { width:  600, height: 350 },
				  content: '<div style="padding:10px"><label for="id_end_obs">Introduzca las observaciones finales sobre el cumplimiento de la tarea.</label><textarea class="form-control" cols="80" id="id_end_obs" name="end_obs" rows="15"></textarea></div>',
				});
			}
		});
		
		$('#tbb_event_abort').click(function(){
		var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			if (student_event.length == 0){
				bootbox.alert('Debe seleccionar un evento de estudiante primero.');
			} else {
				for (var i = 0; i < student_event.length; i++){
					if (student_event[i].event_state == "CON") { 
						bootbox.alert('No se puede abortar/cancelar una tarea que ya fue concluida.');
						return
					} else if (student_event[i].event_state == "ABO") { 
						bootbox.alert('La tarea ya fue abortada.');
						return;
					}
				}
				
				var toolbar_footer = [{
			        item: '<button type="button"><span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span></button>',
			        event: 'click',
			        btnclass: 'btn btn-default',
			        btntext: ' Enviar',
			        callback: function( event ){
			        	var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			        	var str_ids = "";
		        		for (var x = 0; x < student_event.length; x++){ 
	        				str_ids  += student_event[x].id + ",";		        			
		        		}
		        		$('#du_ids').val(str_ids.substring(0, str_ids.length - 1));
			        	$('#du_form')[0].action="/student_event/change_state/ABO/";
			        	$("#du_end_obs").val($("#id_end_obs").val());
						PostAndLoadAjaxContent($('#du_form'));
						event.data.close();
			        }
			    }];
			
				$.jsPanel({
				  id:       "obs_dialog",
				  selector: "#e-jspanelclosed",
				  title: 'Abortado: Observaciones Finales: ',
				  bootstrap: true,
				  position: "center",
				  resizable: "disabled",
				  controls: {
				    maximize:     'disable',
				    minimize:     'disable',
				    normalize:    'disable',
				    smallify:     'disable',
				    maxtoScreen:  'disable'
				  },
				  toolbarFooter: toolbar_footer,
				  size:     { width:  600, height: 350 },
				  content: '<div style="padding:10px"> \
				            <label for="id_end_obs">Introduzca las observaciones finales sobre la razón por la cual la tarea fue abortada.</label> \
				            <textarea class="form-control" cols="80" id="id_end_obs" name="end_obs" rows="15"></textarea> \
				            </div>',
				});
			}
		});
		
		$('#tbb_enrollment').click(function(){
			var student_event = $('#table-pagination').bootstrapTable('getAllSelections')[0];
			if (student_event == null){
				bootbox.alert('Debe seleccionar un evento de estudiante primero.');
			} else {
				if (student_event.approved){
					LoadAjaxContent("/enrollment/new/student_event/" + student_event.id +  "/");
				} else {
					bootbox.alert('El evento de estudiante subió sus datos on-line, estos deben ser aprobados para que este pueda ser matriculado en algún curso.');
				}
			}
		});
		
		$('#tbb_delete').click(function(){
			var student_event = $('#table-pagination').bootstrapTable('getAllSelections');
			if (student_event.length == 0){
				bootbox.alert('Debe seleccionar un evento de estudiante primero.');
			} else {
				{% if not user|has_group:"general_secretary" %}
					for (var i = 0; i < student_event.length; i++){
						if (student_event[i].event_state != 'ESP'){
							bootbox.alert('Solo se pueden eliminar los eventos de estudiante que están en espera.');
							return;
						}
					}
				{% endif %}				
				bootbox.confirm("Por favor confirme que desea eliminar: " + student_event.length + " eventos seleccionados. ", function(result) {
					if(result){
						var str_ids = "";
		        		for (var x = 0; x < student_event.length; x++){ 
	        				str_ids  += student_event[x].id + ",";		        			
		        		}
		        		$('#du_ids').val(str_ids.substring(0, str_ids.length - 1));
						$('#du_form')[0].action= "/student_event/delete/";
						$('#du_form')[0].method = "POST";
						PostAndLoadAjaxContent($('#du_form'));
					} else {
						$('.top-right').notify({
						    message: { text: 'Operación cancelada por el usuario.' },
						    type: 'warning',
						  }).show();
					}
				}); 
			}
		});
	});
</script>
{% endblock %}