{% extends 'ajax-content.djhtml' %}

{% load sigia_auth_filters %}

{% block content %}

<h1 class="page-header">Listado de Matrículas</h1>
<div class="box">
	<div class="box-content" style="display: block;">
		
		<div id="custom-toolbar">
		    <div class="btn-group" role="group">
		    	{% if user|has_group:"secretary" %}
			        <button class="btn btn-default" onclick="LoadAjaxContent('/enrollment/new/');" title="Añadir Matrícula">
						<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Nueva
			    	</button>
		    	{% endif %}
		    	<button class="btn btn-default" id="tbb_print" title="Imprimir Hoja de Matrícula">
					<span class="glyphicon glyphicon-print" aria-hidden="true"></span> Ver/Imprimir
		    	</button>
		    	{% if user|has_group:"secretary" %}
		        <button class="btn btn-default" id="tbb_edit" title="Editar Matrícula">
					<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Editar
		    	</button>
		    	{% endif %}
		    	{% if user|has_group:"general_secretary" %}
		        <button class="btn btn-default" id="tbb_delete" title="Eliminar Matrícula">
					<span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Eliminar
		    	</button>      
		    	{% endif %}
		    </div>
		    
		    <div class="btn-group" role="group">
		    	{% if user|has_group:"general_secretary" or user|has_group:"scholarship_manager" %}
		        <button class="btn btn-default" id="tbb_scholarship" title="Asignar Porcentaje de Beca">
					<span class="glyphicon glyphicon-usd" aria-hidden="true"></span> Beca
		    	</button>      
		    	{% endif %}
		    </div>
		</div>
		<table id="table-pagination"></table>
		<div id="option-content"></div>
		<form id="du_form">{% csrf_token %}
			<input type="hidden" id="du_enrollment_id" name="id" />
		</form>
	</div>
</div>

{% endblock %}

{% block body_scripts %}
<script>
	
	function enrollmentRowStyle(row, index) {
        var classes = ['active-text', 'success-text', 'info-text', 'warning-text', 'danger-text'];

        if (row.payout == false ) return {classes: 'warning-text'};
        return {classes: 'success-text'};
    }
    
    function typeFormatter(value, row) {
		if (value == 'ORD') return 'Ordinaria';
		if (value == 'EXT') return 'Extraordinaria';
		if (value == 'ESP') return 'Especial';
		if (value == 'PRE') return 'Pre-Tecnológico';
		if (value == 'ENE') return 'ENES';
		if (value == 'SBA') return 'Ser Bachiller';
		if (value == 'CON') return 'Educación Continua';
		return value;
    }
    
    function financingFormatter(value, row) {
		if (value == 'DIRE') return 'Crédito Directo';
		if (value == 'IECE') return 'Crédito IECE';
		return value;
    }
    
    function SetScholarship(){
    	var enrollment = $('#table-pagination').bootstrapTable('getSelections')[0];
		if (enrollment != null){
	    	$('#scholarship_form').get(0).action= "/enrollment/" + enrollment.id + "/assign_scholarship/";
			$('#scholarship_form').get(0).method = "POST";
			
			var value = $('#in_scholarchip').get(0).value
			
			if ((value.length < 1 || isNaN(value) || (value < 0 || value > 100))){
				$('#scholarship_label_error').css("display", "inline-block");
				$("#set_scholarship .jsPanel-content").css("height", "140px");
				$("#set_scholarship_errors").css("display", "inline-block");
				return;
			} 
			PostAndLoadAjaxContent($('#scholarship_form'));
			jspanel_scholarship.close();
		}
		
    }

	$(document).ready(function() {
    	$('#table-pagination').mutate('height width', function(el,info) {
	        $('#table-pagination').bootstrapTable('resetView');
	    });
    	
    	$('#table-pagination').bootstrapTable({
                method: 'get',
                url: '/enrollment/api/list/',
                cache: false,
                height: 600,
                striped: true,
                pagination: true,
                search: false,
                showColumns: true,
                showRefresh: true,
                minimumCountColumns: 2,
                clickToSelect: true,
                filterControl: true,
                filterShowClear: true,
                maintainSelected: true,
                searchTimeOut: 1500,
                trimOnSearch: false,
                rowStyle: enrollmentRowStyle,
                showExport: true,
                exportDataType: 'all',
                exportTypes: ['txt', 'csv', 'excel'],
                toolbar: '#custom-toolbar',
                columns: [{
                    field: 'state',
                    radio: true
                }, {
                    field: 'id',
                    title: 'ID',
                    sortable: true,
                    filterControl: 'input'
                }, {
                    field: 'name',
                    title: 'Estudiante',
                    sortable: true,
                    filterControl: 'input'
                }, {
                    field: 'career',
                    title: 'Carrera',
                    sortable: true,
                    filterControl: 'select',
                    filterData: "var:CAREER_CHOICES"
                }, {
                    field: 'period',
                    title: 'Período',
                    sortable: true,
                    filterControl: 'input'
                }, {
                    field: 'semester',
                    title: 'Semestre',
                    sortable: true,
                    filterControl: 'select',
                    filterData: "var:SEMESTER_CHOICES"
                }, {
                    field: 'level',
                    title: 'Nivel',
                    sortable: true,
                    formatter: levelFormatter,
                    filterControl: 'select',
                    filterData: "var:LEVEL_CHOICES"
                }, {
                    field: 'parallel',
                    title: 'Paralelo',
                    sortable: true,
                    filterControl: 'select',
                    filterData: "var:PARALLEL_CHOICES"
                }, {
                    field: 'type',
                    title: 'Tipo',
                    sortable: true,
                    formatter: typeFormatter,
                    filterControl: 'select',
                    filterData: "var:ENROLLMENT_CHOICES"
                }, {
                    field: 'date',
                    title: 'Fecha',
                    sortable: true,
                    filterControl: 'input'
                }, {
                    field: 'financing_sys',
                    title: 'Financieminto',
                    sortable: true,
                    formatter: financingFormatter,
                    filterControl: 'select',
                    filterData: "var:FINANCING_SYS_CHOICES"
                }, {
                    field: 'payout',
                    title: 'Pagado',
                    sortable: true,
                    sorter: booleanSorter,
                    formatter: boobleanFormatter,
                    filterControl: 'select',
                    filterData: "var:YESNO_CHOICES"
                },{
                    field: 'created',
                    title: 'Creado',
                    sortable: true,
                    visible: false,
                    filterControl: 'input'
                }, {
                    field: 'created_by',
                    title: 'Creado por',
                    sortable: true,
                    visible: false,
                    filterControl: 'input'
                }, {
                    field: 'modified',
                    title: 'Modificado',
                    sortable: true,
                    visible: false,
                    filterControl: 'input'
                }, {
                    field: 'modified_by',
                    title: 'Modificado por',
                    sortable: true,
                    visible: false,
                    filterControl: 'input'
                }]
            });
		
		
		$('#tbb_edit').click(function(){
			var enrollment = $('#table-pagination').bootstrapTable('getSelections')[0];
			if (enrollment == null){
				bootbox.alert('Debe seleccionar una matrícula primero.');
			} else {
				LoadAjaxContent("/enrollment/" + enrollment.id + "/upgrade/");
			}
		});
		
		$('#tbb_scholarship').click(function(){
			var enrollment = $('#table-pagination').bootstrapTable('getSelections')[0];
			if (enrollment != null){
				if (enrollment.payout == true){
					jspanel_scholarship = $.jsPanel({
					  id: "set_scholarship",
					  paneltype: 'modal',
					  title: 'Beca: ',
					  resizable: "disabled",
					  bootstrap: true,
					  position: "center",
					  controls: { buttons: false, iconfont: 'font-awesome' },
					  size:     { width: 420, height: 80 },
				      load: {
				        url: '/enrollment/set_scholarship/',
			        	}
					});
				} else {
					bootbox.alert('No se puede asignar beca a una matrícula que no ha sido pagada.');
				}
			} else {
				bootbox.alert('Debe seleccionar una matrícula primero.');
			}
		});
		
		$('#tbb_print').click(function(){
			var enrollment = $('#table-pagination').bootstrapTable('getSelections')[0];
			if (enrollment == null){
				LoadAjaxContent("/enrollment/generate_enrollment_book/");
			} else {
				if (enrollment.payout == true){
					$.jsPanel({
					  title: 'Matrícula del estudiante: ',
					  bootstrap: true,
					  position: "center",
					  size:     { width:  800, height: 600 },
					  content: '<embed src="http://{{ REPORT_SERVER }}/pentaho/api/repos/%3Aaitec%3Aenrollment_sheet_by_id.prpt/generatedContent?userid=admin&password=password&output-type=pageable/pdf&enrollment_id=' + enrollment.id + '" width="100%" height="100%">'
					});
				} else {
					bootbox.alert('La matrícula debe ser pagada primero.');
				}
			}
		});
		
		$('#tbb_delete').click(function(){
			var enrollment = $('#table-pagination').bootstrapTable('getSelections')[0];
			if (enrollment == null){
				bootbox.alert('Debe seleccionar una matrícula primero.');
			} else {
				bootbox.confirm("Por favor confirme que desea eliminar la matrícula: " + enrollment.user + " : " + enrollment.course, function(result) {
					if(result){						
						$('#du_form')[0].action= "/enrollment/" + enrollment.id + "/delete/";
						$('#du_form')[0].method = "POST";
						$('#du_enrollment_id')[0].value = enrollment.id;
						PostAndLoadAjaxContent($('#du_form'));
					} else {
						$('.top-right').notify({
						    message: { text: 'Operación cancelada por el usuario.' },
						    type: 'warning',
						  }).show();
					}
				}); 
			}
		});
	});
</script>
{% endblock %}